// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: blade_ingestion.proto

package proto

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncJobRequest_SyncType int32

const (
	SyncJobRequest_FULL        SyncJobRequest_SyncType = 0
	SyncJobRequest_INCREMENTAL SyncJobRequest_SyncType = 1
	SyncJobRequest_DATA_TYPE   SyncJobRequest_SyncType = 2
)

// Enum value maps for SyncJobRequest_SyncType.
var (
	SyncJobRequest_SyncType_name = map[int32]string{
		0: "FULL",
		1: "INCREMENTAL",
		2: "DATA_TYPE",
	}
	SyncJobRequest_SyncType_value = map[string]int32{
		"FULL":        0,
		"INCREMENTAL": 1,
		"DATA_TYPE":   2,
	}
)

func (x SyncJobRequest_SyncType) Enum() *SyncJobRequest_SyncType {
	p := new(SyncJobRequest_SyncType)
	*p = x
	return p
}

func (x SyncJobRequest_SyncType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncJobRequest_SyncType) Descriptor() protoreflect.EnumDescriptor {
	return file_blade_ingestion_proto_enumTypes[0].Descriptor()
}

func (SyncJobRequest_SyncType) Type() protoreflect.EnumType {
	return &file_blade_ingestion_proto_enumTypes[0]
}

func (x SyncJobRequest_SyncType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncJobRequest_SyncType.Descriptor instead.
func (SyncJobRequest_SyncType) EnumDescriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{9, 0}
}

type DataSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	DataType      string                 `protobuf:"bytes,3,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Config        *structpb.Struct       `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSource) Reset() {
	*x = DataSource{}
	mi := &file_blade_ingestion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSource) ProtoMessage() {}

func (x *DataSource) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSource.ProtoReflect.Descriptor instead.
func (*DataSource) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{0}
}

func (x *DataSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataSource) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DataSource) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *DataSource) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DataSource) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

type DataSourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSourceRequest) Reset() {
	*x = DataSourceRequest{}
	mi := &file_blade_ingestion_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceRequest) ProtoMessage() {}

func (x *DataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceRequest.ProtoReflect.Descriptor instead.
func (*DataSourceRequest) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{1}
}

func (x *DataSourceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DataSourceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataSources   []*DataSource          `protobuf:"bytes,1,rep,name=dataSources,proto3" json:"dataSources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSourceList) Reset() {
	*x = DataSourceList{}
	mi := &file_blade_ingestion_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSourceList) ProtoMessage() {}

func (x *DataSourceList) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSourceList.ProtoReflect.Descriptor instead.
func (*DataSourceList) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{2}
}

func (x *DataSourceList) GetDataSources() []*DataSource {
	if x != nil {
		return x.DataSources
	}
	return nil
}

type BLADEQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataType      string                 `protobuf:"bytes,1,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Filter        string                 `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       string                 `protobuf:"bytes,5,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BLADEQuery) Reset() {
	*x = BLADEQuery{}
	mi := &file_blade_ingestion_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLADEQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLADEQuery) ProtoMessage() {}

func (x *BLADEQuery) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLADEQuery.ProtoReflect.Descriptor instead.
func (*BLADEQuery) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{3}
}

func (x *BLADEQuery) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *BLADEQuery) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *BLADEQuery) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *BLADEQuery) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BLADEQuery) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type BLADEQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*BLADEItem           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	NextPageToken string                 `protobuf:"bytes,3,opt,name=nextPageToken,proto3" json:"nextPageToken,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BLADEQueryResponse) Reset() {
	*x = BLADEQueryResponse{}
	mi := &file_blade_ingestion_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLADEQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLADEQueryResponse) ProtoMessage() {}

func (x *BLADEQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLADEQueryResponse.ProtoReflect.Descriptor instead.
func (*BLADEQueryResponse) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{4}
}

func (x *BLADEQueryResponse) GetItems() []*BLADEItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BLADEQueryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BLADEQueryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BLADEItem struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ItemId                string                 `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	DataType              string                 `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Data                  *structpb.Struct       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	ClassificationMarking string                 `protobuf:"bytes,4,opt,name=classificationMarking,proto3" json:"classificationMarking,omitempty"`
	LastModified          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	Metadata              map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BLADEItem) Reset() {
	*x = BLADEItem{}
	mi := &file_blade_ingestion_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLADEItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLADEItem) ProtoMessage() {}

func (x *BLADEItem) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLADEItem.ProtoReflect.Descriptor instead.
func (*BLADEItem) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{5}
}

func (x *BLADEItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BLADEItem) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *BLADEItem) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BLADEItem) GetClassificationMarking() string {
	if x != nil {
		return x.ClassificationMarking
	}
	return ""
}

func (x *BLADEItem) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *BLADEItem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BLADEItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataType      string                 `protobuf:"bytes,1,opt,name=dataType,proto3" json:"dataType,omitempty"`
	ItemId        string                 `protobuf:"bytes,2,opt,name=itemId,proto3" json:"itemId,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BLADEItemRequest) Reset() {
	*x = BLADEItemRequest{}
	mi := &file_blade_ingestion_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLADEItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLADEItemRequest) ProtoMessage() {}

func (x *BLADEItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLADEItemRequest.ProtoReflect.Descriptor instead.
func (*BLADEItemRequest) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{6}
}

func (x *BLADEItemRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *BLADEItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BLADEItemRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BulkIngestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataType      string                 `protobuf:"bytes,1,opt,name=dataType,proto3" json:"dataType,omitempty"`
	ItemIds       []string               `protobuf:"bytes,2,rep,name=itemIds,proto3" json:"itemIds,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	MaxItems      int32                  `protobuf:"varint,4,opt,name=maxItems,proto3" json:"maxItems,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkIngestionRequest) Reset() {
	*x = BulkIngestionRequest{}
	mi := &file_blade_ingestion_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkIngestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkIngestionRequest) ProtoMessage() {}

func (x *BulkIngestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkIngestionRequest.ProtoReflect.Descriptor instead.
func (*BulkIngestionRequest) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{7}
}

func (x *BulkIngestionRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *BulkIngestionRequest) GetItemIds() []string {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *BulkIngestionRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *BulkIngestionRequest) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *BulkIngestionRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IngestionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ItemsProcessed int32                  `protobuf:"varint,2,opt,name=itemsProcessed,proto3" json:"itemsProcessed,omitempty"`
	ItemsSucceeded int32                  `protobuf:"varint,3,opt,name=itemsSucceeded,proto3" json:"itemsSucceeded,omitempty"`
	ItemsFailed    int32                  `protobuf:"varint,4,opt,name=itemsFailed,proto3" json:"itemsFailed,omitempty"`
	Errors         []string               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	Details        map[string]string      `protobuf:"bytes,6,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *IngestionResponse) Reset() {
	*x = IngestionResponse{}
	mi := &file_blade_ingestion_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionResponse) ProtoMessage() {}

func (x *IngestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionResponse.ProtoReflect.Descriptor instead.
func (*IngestionResponse) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{8}
}

func (x *IngestionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *IngestionResponse) GetItemsProcessed() int32 {
	if x != nil {
		return x.ItemsProcessed
	}
	return 0
}

func (x *IngestionResponse) GetItemsSucceeded() int32 {
	if x != nil {
		return x.ItemsSucceeded
	}
	return 0
}

func (x *IngestionResponse) GetItemsFailed() int32 {
	if x != nil {
		return x.ItemsFailed
	}
	return 0
}

func (x *IngestionResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *IngestionResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

type SyncJobRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	SyncType      SyncJobRequest_SyncType `protobuf:"varint,1,opt,name=syncType,proto3,enum=blade.SyncJobRequest_SyncType" json:"syncType,omitempty"`
	DataType      string                  `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Filter        string                  `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	MaxItems      int64                   `protobuf:"varint,4,opt,name=maxItems,proto3" json:"maxItems,omitempty"`
	Options       *structpb.Struct        `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncJobRequest) Reset() {
	*x = SyncJobRequest{}
	mi := &file_blade_ingestion_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncJobRequest) ProtoMessage() {}

func (x *SyncJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncJobRequest.ProtoReflect.Descriptor instead.
func (*SyncJobRequest) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{9}
}

func (x *SyncJobRequest) GetSyncType() SyncJobRequest_SyncType {
	if x != nil {
		return x.SyncType
	}
	return SyncJobRequest_FULL
}

func (x *SyncJobRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *SyncJobRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *SyncJobRequest) GetMaxItems() int64 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *SyncJobRequest) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

type BLADEQueryJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SqlQuery      string                 `protobuf:"bytes,1,opt,name=sqlQuery,proto3" json:"sqlQuery,omitempty"`
	DataType      string                 `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CatalogConfig *structpb.Struct       `protobuf:"bytes,4,opt,name=catalogConfig,proto3" json:"catalogConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BLADEQueryJobRequest) Reset() {
	*x = BLADEQueryJobRequest{}
	mi := &file_blade_ingestion_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BLADEQueryJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BLADEQueryJobRequest) ProtoMessage() {}

func (x *BLADEQueryJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BLADEQueryJobRequest.ProtoReflect.Descriptor instead.
func (*BLADEQueryJobRequest) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{10}
}

func (x *BLADEQueryJobRequest) GetSqlQuery() string {
	if x != nil {
		return x.SqlQuery
	}
	return ""
}

func (x *BLADEQueryJobRequest) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *BLADEQueryJobRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *BLADEQueryJobRequest) GetCatalogConfig() *structpb.Struct {
	if x != nil {
		return x.CatalogConfig
	}
	return nil
}

type JobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobRequest) Reset() {
	*x = JobRequest{}
	mi := &file_blade_ingestion_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRequest) ProtoMessage() {}

func (x *JobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRequest.ProtoReflect.Descriptor instead.
func (*JobRequest) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{11}
}

func (x *JobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type JobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobResponse) Reset() {
	*x = JobResponse{}
	mi := &file_blade_ingestion_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResponse) ProtoMessage() {}

func (x *JobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResponse.ProtoReflect.Descriptor instead.
func (*JobResponse) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{12}
}

func (x *JobResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JobResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

type JobStatusResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JobId               string                 `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Status              string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Progress            float32                `protobuf:"fixed32,3,opt,name=progress,proto3" json:"progress,omitempty"`
	CurrentOperation    string                 `protobuf:"bytes,4,opt,name=currentOperation,proto3" json:"currentOperation,omitempty"`
	TotalItems          int32                  `protobuf:"varint,5,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
	ProcessedItems      int32                  `protobuf:"varint,6,opt,name=processedItems,proto3" json:"processedItems,omitempty"`
	SuccessCount        int32                  `protobuf:"varint,7,opt,name=successCount,proto3" json:"successCount,omitempty"`
	ErrorCount          int32                  `protobuf:"varint,8,opt,name=errorCount,proto3" json:"errorCount,omitempty"`
	StartTime           *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EstimatedCompletion *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=estimatedCompletion,proto3" json:"estimatedCompletion,omitempty"`
	RecentErrors        []string               `protobuf:"bytes,11,rep,name=recentErrors,proto3" json:"recentErrors,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *JobStatusResponse) Reset() {
	*x = JobStatusResponse{}
	mi := &file_blade_ingestion_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusResponse) ProtoMessage() {}

func (x *JobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusResponse.ProtoReflect.Descriptor instead.
func (*JobStatusResponse) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{13}
}

func (x *JobStatusResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobStatusResponse) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *JobStatusResponse) GetCurrentOperation() string {
	if x != nil {
		return x.CurrentOperation
	}
	return ""
}

func (x *JobStatusResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *JobStatusResponse) GetProcessedItems() int32 {
	if x != nil {
		return x.ProcessedItems
	}
	return 0
}

func (x *JobStatusResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *JobStatusResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *JobStatusResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *JobStatusResponse) GetEstimatedCompletion() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedCompletion
	}
	return nil
}

func (x *JobStatusResponse) GetRecentErrors() []string {
	if x != nil {
		return x.RecentErrors
	}
	return nil
}

type SyncStatusResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	JobId               string                 `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	Status              string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	CurrentOperation    string                 `protobuf:"bytes,3,opt,name=currentOperation,proto3" json:"currentOperation,omitempty"`
	TotalItems          int32                  `protobuf:"varint,4,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
	ProcessedItems      int32                  `protobuf:"varint,5,opt,name=processedItems,proto3" json:"processedItems,omitempty"`
	SuccessCount        int32                  `protobuf:"varint,6,opt,name=successCount,proto3" json:"successCount,omitempty"`
	ErrorCount          int32                  `protobuf:"varint,7,opt,name=errorCount,proto3" json:"errorCount,omitempty"`
	StartTime           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EstimatedCompletion *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=estimatedCompletion,proto3" json:"estimatedCompletion,omitempty"`
	RecentErrors        []string               `protobuf:"bytes,10,rep,name=recentErrors,proto3" json:"recentErrors,omitempty"`
	ProgressByType      map[string]int32       `protobuf:"bytes,11,rep,name=progressByType,proto3" json:"progressByType,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SyncStatusResponse) Reset() {
	*x = SyncStatusResponse{}
	mi := &file_blade_ingestion_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatusResponse) ProtoMessage() {}

func (x *SyncStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatusResponse.ProtoReflect.Descriptor instead.
func (*SyncStatusResponse) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{14}
}

func (x *SyncStatusResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *SyncStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SyncStatusResponse) GetCurrentOperation() string {
	if x != nil {
		return x.CurrentOperation
	}
	return ""
}

func (x *SyncStatusResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *SyncStatusResponse) GetProcessedItems() int32 {
	if x != nil {
		return x.ProcessedItems
	}
	return 0
}

func (x *SyncStatusResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *SyncStatusResponse) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *SyncStatusResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SyncStatusResponse) GetEstimatedCompletion() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedCompletion
	}
	return nil
}

func (x *SyncStatusResponse) GetRecentErrors() []string {
	if x != nil {
		return x.RecentErrors
	}
	return nil
}

func (x *SyncStatusResponse) GetProgressByType() map[string]int32 {
	if x != nil {
		return x.ProgressByType
	}
	return nil
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Services      map[string]string      `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Uptime        string                 `protobuf:"bytes,4,opt,name=uptime,proto3" json:"uptime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_blade_ingestion_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blade_ingestion_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_blade_ingestion_proto_rawDescGZIP(), []int{15}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetServices() map[string]string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *HealthResponse) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

var File_blade_ingestion_proto protoreflect.FileDescriptor

const file_blade_ingestion_proto_rawDesc = "" +
	"\n" +
	"\x15blade_ingestion.proto\x12\x05blade\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xb6\x04\n" +
	"\n" +
	"DataSource\x12r\n" +
	"\x04name\x18\x01 \x01(\tB^\x92AX2AUnique identifier for the data source (e.g., 'blade-maintenance')J\x13\"blade-maintenance\"\xe0A\x02R\x04name\x12h\n" +
	"\vdisplayName\x18\x02 \x01(\tBF\x92AC2'Human-readable name for the data sourceJ\x18\"BLADE Maintenance Data\"R\vdisplayName\x12t\n" +
	"\bdataType\x18\x03 \x01(\tBX\x92AR2AType of BLADE data: maintenance, sortie, deployment, or logisticsJ\r\"maintenance\"\xe0A\x02R\bdataType\x12Q\n" +
	"\aenabled\x18\x04 \x01(\bB7\x92A42,Whether this data source is currently activeJ\x04trueR\aenabled\x12\x80\x01\n" +
	"\x06config\x18\x05 \x01(\v2\x17.google.protobuf.StructBO\x92AL2JAdditional configuration parameters (warehouse_id, catalog, schema, table)R\x06config\",\n" +
	"\x11DataSourceRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\x02R\x04name\"E\n" +
	"\x0eDataSourceList\x123\n" +
	"\vdataSources\x18\x01 \x03(\v2\x11.blade.DataSourceR\vdataSources\"\xfc\x02\n" +
	"\n" +
	"BLADEQuery\x12?\n" +
	"\bdataType\x18\x01 \x01(\tB#\x92A\x1d2\x1bType of BLADE data to query\xe0A\x02R\bdataType\x12Y\n" +
	"\x06filter\x18\x02 \x01(\tBA\x92A>2'Optional SQL WHERE clause for filteringJ\x13\"priority = 'HIGH'\"R\x06filter\x12C\n" +
	"\x05limit\x18\x03 \x01(\x05B-\x92A*2#Maximum number of results to returnJ\x03100R\x05limit\x12H\n" +
	"\x06offset\x18\x04 \x01(\x05B0\x92A-2(Number of results to skip for paginationJ\x010R\x06offset\x12C\n" +
	"\aorderBy\x18\x05 \x01(\tB)\x92A&2$Sort order (e.g., 'created_at DESC')R\aorderBy\"\x82\x01\n" +
	"\x12BLADEQueryResponse\x12&\n" +
	"\x05items\x18\x01 \x03(\v2\x10.blade.BLADEItemR\x05items\x12\x1e\n" +
	"\n" +
	"totalCount\x18\x02 \x01(\x05R\n" +
	"totalCount\x12$\n" +
	"\rnextPageToken\x18\x03 \x01(\tR\rnextPageToken\"\xdb\x02\n" +
	"\tBLADEItem\x12\x16\n" +
	"\x06itemId\x18\x01 \x01(\tR\x06itemId\x12\x1a\n" +
	"\bdataType\x18\x02 \x01(\tR\bdataType\x12+\n" +
	"\x04data\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x04data\x124\n" +
	"\x15classificationMarking\x18\x04 \x01(\tR\x15classificationMarking\x12>\n" +
	"\flastModified\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\x12:\n" +
	"\bmetadata\x18\x06 \x03(\v2\x1e.blade.BLADEItem.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x01\n" +
	"\x10BLADEItemRequest\x12\x1f\n" +
	"\bdataType\x18\x01 \x01(\tB\x03\xe0A\x02R\bdataType\x12\x1b\n" +
	"\x06itemId\x18\x02 \x01(\tB\x03\xe0A\x02R\x06itemId\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\x89\x02\n" +
	"\x14BulkIngestionRequest\x12\x1f\n" +
	"\bdataType\x18\x01 \x01(\tB\x03\xe0A\x02R\bdataType\x12\x18\n" +
	"\aitemIds\x18\x02 \x03(\tR\aitemIds\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x1a\n" +
	"\bmaxItems\x18\x04 \x01(\x05R\bmaxItems\x12E\n" +
	"\bmetadata\x18\x05 \x03(\v2).blade.BulkIngestionRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x02\n" +
	"\x11IngestionResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12&\n" +
	"\x0eitemsProcessed\x18\x02 \x01(\x05R\x0eitemsProcessed\x12&\n" +
	"\x0eitemsSucceeded\x18\x03 \x01(\x05R\x0eitemsSucceeded\x12 \n" +
	"\vitemsFailed\x18\x04 \x01(\x05R\vitemsFailed\x12\x16\n" +
	"\x06errors\x18\x05 \x03(\tR\x06errors\x12?\n" +
	"\adetails\x18\x06 \x03(\v2%.blade.IngestionResponse.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x02\n" +
	"\x0eSyncJobRequest\x12:\n" +
	"\bsyncType\x18\x01 \x01(\x0e2\x1e.blade.SyncJobRequest.SyncTypeR\bsyncType\x12\x1a\n" +
	"\bdataType\x18\x02 \x01(\tR\bdataType\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x1a\n" +
	"\bmaxItems\x18\x04 \x01(\x03R\bmaxItems\x121\n" +
	"\aoptions\x18\x05 \x01(\v2\x17.google.protobuf.StructR\aoptions\"4\n" +
	"\bSyncType\x12\b\n" +
	"\x04FULL\x10\x00\x12\x0f\n" +
	"\vINCREMENTAL\x10\x01\x12\r\n" +
	"\tDATA_TYPE\x10\x02\"\xa5\x04\n" +
	"\x14BLADEQueryJobRequest\x12\x8b\x01\n" +
	"\bsqlQuery\x18\x01 \x01(\tBo\x92Ai2'SQL query to execute against DatabricksJ>\"SELECT * FROM blade_maintenance_data WHERE priority = 'HIGH'\"\xe0A\x02R\bsqlQuery\x12D\n" +
	"\bdataType\x18\x02 \x01(\tB(\x92A\"2 Type of BLADE data being queried\xe0A\x02R\bdataType\x12y\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2+.blade.BLADEQueryJobRequest.ParametersEntryB,\x92A)2'Additional parameters for the query jobR\n" +
	"parameters\x12\x7f\n" +
	"\rcatalogConfig\x18\x04 \x01(\v2\x17.google.protobuf.StructB@\x92A=2;Configuration for catalog upload (classification, metadata)R\rcatalogConfig\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"'\n" +
	"\n" +
	"JobRequest\x12\x19\n" +
	"\x05jobId\x18\x01 \x01(\tB\x03\xe0A\x02R\x05jobId\"\x8f\x01\n" +
	"\vJobResponse\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x128\n" +
	"\tstartTime\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\"\xc1\x03\n" +
	"\x11JobStatusResponse\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x02R\bprogress\x12*\n" +
	"\x10currentOperation\x18\x04 \x01(\tR\x10currentOperation\x12\x1e\n" +
	"\n" +
	"totalItems\x18\x05 \x01(\x05R\n" +
	"totalItems\x12&\n" +
	"\x0eprocessedItems\x18\x06 \x01(\x05R\x0eprocessedItems\x12\"\n" +
	"\fsuccessCount\x18\a \x01(\x05R\fsuccessCount\x12\x1e\n" +
	"\n" +
	"errorCount\x18\b \x01(\x05R\n" +
	"errorCount\x128\n" +
	"\tstartTime\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12L\n" +
	"\x13estimatedCompletion\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x13estimatedCompletion\x12\"\n" +
	"\frecentErrors\x18\v \x03(\tR\frecentErrors\"\xc0\x04\n" +
	"\x12SyncStatusResponse\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12*\n" +
	"\x10currentOperation\x18\x03 \x01(\tR\x10currentOperation\x12\x1e\n" +
	"\n" +
	"totalItems\x18\x04 \x01(\x05R\n" +
	"totalItems\x12&\n" +
	"\x0eprocessedItems\x18\x05 \x01(\x05R\x0eprocessedItems\x12\"\n" +
	"\fsuccessCount\x18\x06 \x01(\x05R\fsuccessCount\x12\x1e\n" +
	"\n" +
	"errorCount\x18\a \x01(\x05R\n" +
	"errorCount\x128\n" +
	"\tstartTime\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12L\n" +
	"\x13estimatedCompletion\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x13estimatedCompletion\x12\"\n" +
	"\frecentErrors\x18\n" +
	" \x03(\tR\frecentErrors\x12U\n" +
	"\x0eprogressByType\x18\v \x03(\v2-.blade.SyncStatusResponse.ProgressByTypeEntryR\x0eprogressByType\x1aA\n" +
	"\x13ProgressByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xd8\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12?\n" +
	"\bservices\x18\x03 \x03(\v2#.blade.HealthResponse.ServicesEntryR\bservices\x12\x16\n" +
	"\x06uptime\x18\x04 \x01(\tR\x06uptime\x1a;\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\x84\x17\n" +
	"\x15BLADEIngestionService\x12\x92\x02\n" +
	"\x0eAddBLADESource\x12\x11.blade.DataSource\x1a\x16.google.protobuf.Empty\"\xd4\x01\x92A\xae\x01\n" +
	"\rConfiguration\x12\x1dConfigure a BLADE data source\x1a~Adds a new Databricks data source for BLADE data. The source configuration includes connection details and data type mappings.\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/configure/blade/{name}\x12\x81\x02\n" +
	"\x10ListBLADESources\x12\x16.google.protobuf.Empty\x1a\x15.blade.DataSourceList\"\xbd\x01\x92A\x99\x01\n" +
	"\rConfiguration\x12&List all configured BLADE data sources\x1a`Returns a list of all configured BLADE data sources with their current status and configuration.\x82\xd3\xe4\x93\x02\x1a\x12\x18/configure/blade/sources\x12\xef\x01\n" +
	"\x11RemoveBLADESource\x12\x18.blade.DataSourceRequest\x1a\x16.google.protobuf.Empty\"\xa7\x01\x92A\x84\x01\n" +
	"\rConfiguration\x12\x1aRemove a BLADE data source\x1aWRemoves a configured BLADE data source. This does not delete any already ingested data.\x82\xd3\xe4\x93\x02\x19*\x17/configure/blade/{name}\x12\xda\x01\n" +
	"\n" +
	"QueryBLADE\x12\x11.blade.BLADEQuery\x1a\x19.blade.BLADEQueryResponse\"\x9d\x01\x92A\x80\x01\n" +
	"\x05Query\x12\x18Query BLADE data by type\x1a]Queries BLADE data from Databricks based on data type with optional filtering and pagination.\x82\xd3\xe4\x93\x02\x13\x12\x11/blade/{dataType}\x12\xd0\x01\n" +
	"\fGetBLADEItem\x12\x17.blade.BLADEItemRequest\x1a\x10.blade.BLADEItem\"\x94\x01\x92Ao\n" +
	"\x05Query\x12\x1dGet specific BLADE item by ID\x1aGRetrieves a specific BLADE item by its unique identifier and data type.\x82\xd3\xe4\x93\x02\x1c\x12\x1a/blade/{dataType}/{itemId}\x12\x87\x02\n" +
	"\x0fIngestBLADEItem\x12\x17.blade.BLADEItemRequest\x1a\x18.blade.IngestionResponse\"\xc0\x01\x92A\x89\x01\n" +
	"\tIngestion\x12%Ingest specific BLADE item to catalog\x1aUFetches a specific BLADE item from Databricks and ingests it into the catalog system.\x82\xd3\xe4\x93\x02-:\bmetadata\"!/blade/{dataType}/{itemId}/ingest\x12\xdc\x01\n" +
	"\x0fBulkIngestBLADE\x12\x1b.blade.BulkIngestionRequest\x1a\x18.blade.IngestionResponse\"\x91\x01\x92Aq\n" +
	"\tIngestion\x12\x17Bulk ingest BLADE items\x1aKIngests multiple BLADE items based on filter criteria or specific item IDs.\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/blade/bulk-ingest\x12\xcc\x01\n" +
	"\x0eStartBLADESync\x12\x15.blade.SyncJobRequest\x1a\x12.blade.JobResponse\"\x8e\x01\x92Ap\n" +
	"\x04Jobs\x12\x19Start BLADE data sync job\x1aMStarts an asynchronous job to sync BLADE data from Databricks to the catalog.\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/jobs/sync/start\x12\xa6\x01\n" +
	"\rStopBLADESync\x12\x16.google.protobuf.Empty\x1a\x12.blade.JobResponse\"i\x92AO\n" +
	"\x04Jobs\x12\x15Stop current sync job\x1a0Stops the currently running synchronization job.\x82\xd3\xe4\x93\x02\x11\"\x0f/jobs/sync/stop\x12\xcd\x01\n" +
	"\rGetSyncStatus\x12\x16.google.protobuf.Empty\x1a\x19.blade.SyncStatusResponse\"\x88\x01\x92Al\n" +
	"\x04Jobs\x12\x1bGet current sync job status\x1aGReturns detailed status information about the current or last sync job.\x82\xd3\xe4\x93\x02\x13\x12\x11/jobs/sync/status\x12\xf6\x01\n" +
	"\x12StartBLADEQueryJob\x12\x1b.blade.BLADEQueryJobRequest\x1a\x12.blade.JobResponse\"\xae\x01\x92A\x88\x01\n" +
	"\x04Jobs\x12\x1bStart async BLADE query job\x1acStarts an asynchronous job to execute a custom SQL query against Databricks and ingest the results.\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/jobs/blade/query/start\x12\xd4\x01\n" +
	"\x16GetBLADEQueryJobStatus\x12\x11.blade.JobRequest\x1a\x18.blade.JobStatusResponse\"\x8c\x01\x92Aa\n" +
	"\x04Jobs\x12\x1aGet BLADE query job status\x1a=Returns the current status and progress of a BLADE query job.\x82\xd3\xe4\x93\x02\"\x12 /jobs/blade/query/status/{jobId}\x12\xae\x01\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a\x15.blade.HealthResponse\"p\x92A^\n" +
	"\x06System\x12\x14Service health check\x1a>Returns the health status of the service and its dependencies.\x82\xd3\xe4\x93\x02\t\x12\a/healthB\xd4\x02\x92A\xa7\x02\x12\xcb\x01\n" +
	"\x1bBLADE Ingestion Service API\x12{Service for ingesting BLADE (Basic Logistics and Deployment Engine) data from Databricks mock server into a catalog system.\"*\n" +
	"\rBLADE Support\x1a\x19blade-support@example.com2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonR/\n" +
	"\x03404\x12(\n" +
	"\tNot found\x12\x1b\n" +
	"\x19\x1a\x17#/definitions/rpcStatusZ'blade-ingestion-service/generated/protob\x06proto3"

var (
	file_blade_ingestion_proto_rawDescOnce sync.Once
	file_blade_ingestion_proto_rawDescData []byte
)

func file_blade_ingestion_proto_rawDescGZIP() []byte {
	file_blade_ingestion_proto_rawDescOnce.Do(func() {
		file_blade_ingestion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_blade_ingestion_proto_rawDesc), len(file_blade_ingestion_proto_rawDesc)))
	})
	return file_blade_ingestion_proto_rawDescData
}

var file_blade_ingestion_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_blade_ingestion_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_blade_ingestion_proto_goTypes = []any{
	(SyncJobRequest_SyncType)(0),  // 0: blade.SyncJobRequest.SyncType
	(*DataSource)(nil),            // 1: blade.DataSource
	(*DataSourceRequest)(nil),     // 2: blade.DataSourceRequest
	(*DataSourceList)(nil),        // 3: blade.DataSourceList
	(*BLADEQuery)(nil),            // 4: blade.BLADEQuery
	(*BLADEQueryResponse)(nil),    // 5: blade.BLADEQueryResponse
	(*BLADEItem)(nil),             // 6: blade.BLADEItem
	(*BLADEItemRequest)(nil),      // 7: blade.BLADEItemRequest
	(*BulkIngestionRequest)(nil),  // 8: blade.BulkIngestionRequest
	(*IngestionResponse)(nil),     // 9: blade.IngestionResponse
	(*SyncJobRequest)(nil),        // 10: blade.SyncJobRequest
	(*BLADEQueryJobRequest)(nil),  // 11: blade.BLADEQueryJobRequest
	(*JobRequest)(nil),            // 12: blade.JobRequest
	(*JobResponse)(nil),           // 13: blade.JobResponse
	(*JobStatusResponse)(nil),     // 14: blade.JobStatusResponse
	(*SyncStatusResponse)(nil),    // 15: blade.SyncStatusResponse
	(*HealthResponse)(nil),        // 16: blade.HealthResponse
	nil,                           // 17: blade.BLADEItem.MetadataEntry
	nil,                           // 18: blade.BulkIngestionRequest.MetadataEntry
	nil,                           // 19: blade.IngestionResponse.DetailsEntry
	nil,                           // 20: blade.BLADEQueryJobRequest.ParametersEntry
	nil,                           // 21: blade.SyncStatusResponse.ProgressByTypeEntry
	nil,                           // 22: blade.HealthResponse.ServicesEntry
	(*structpb.Struct)(nil),       // 23: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 24: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 25: google.protobuf.Empty
}
var file_blade_ingestion_proto_depIdxs = []int32{
	23, // 0: blade.DataSource.config:type_name -> google.protobuf.Struct
	1,  // 1: blade.DataSourceList.dataSources:type_name -> blade.DataSource
	6,  // 2: blade.BLADEQueryResponse.items:type_name -> blade.BLADEItem
	23, // 3: blade.BLADEItem.data:type_name -> google.protobuf.Struct
	24, // 4: blade.BLADEItem.lastModified:type_name -> google.protobuf.Timestamp
	17, // 5: blade.BLADEItem.metadata:type_name -> blade.BLADEItem.MetadataEntry
	23, // 6: blade.BLADEItemRequest.metadata:type_name -> google.protobuf.Struct
	18, // 7: blade.BulkIngestionRequest.metadata:type_name -> blade.BulkIngestionRequest.MetadataEntry
	19, // 8: blade.IngestionResponse.details:type_name -> blade.IngestionResponse.DetailsEntry
	0,  // 9: blade.SyncJobRequest.syncType:type_name -> blade.SyncJobRequest.SyncType
	23, // 10: blade.SyncJobRequest.options:type_name -> google.protobuf.Struct
	20, // 11: blade.BLADEQueryJobRequest.parameters:type_name -> blade.BLADEQueryJobRequest.ParametersEntry
	23, // 12: blade.BLADEQueryJobRequest.catalogConfig:type_name -> google.protobuf.Struct
	24, // 13: blade.JobResponse.startTime:type_name -> google.protobuf.Timestamp
	24, // 14: blade.JobStatusResponse.startTime:type_name -> google.protobuf.Timestamp
	24, // 15: blade.JobStatusResponse.estimatedCompletion:type_name -> google.protobuf.Timestamp
	24, // 16: blade.SyncStatusResponse.startTime:type_name -> google.protobuf.Timestamp
	24, // 17: blade.SyncStatusResponse.estimatedCompletion:type_name -> google.protobuf.Timestamp
	21, // 18: blade.SyncStatusResponse.progressByType:type_name -> blade.SyncStatusResponse.ProgressByTypeEntry
	22, // 19: blade.HealthResponse.services:type_name -> blade.HealthResponse.ServicesEntry
	1,  // 20: blade.BLADEIngestionService.AddBLADESource:input_type -> blade.DataSource
	25, // 21: blade.BLADEIngestionService.ListBLADESources:input_type -> google.protobuf.Empty
	2,  // 22: blade.BLADEIngestionService.RemoveBLADESource:input_type -> blade.DataSourceRequest
	4,  // 23: blade.BLADEIngestionService.QueryBLADE:input_type -> blade.BLADEQuery
	7,  // 24: blade.BLADEIngestionService.GetBLADEItem:input_type -> blade.BLADEItemRequest
	7,  // 25: blade.BLADEIngestionService.IngestBLADEItem:input_type -> blade.BLADEItemRequest
	8,  // 26: blade.BLADEIngestionService.BulkIngestBLADE:input_type -> blade.BulkIngestionRequest
	10, // 27: blade.BLADEIngestionService.StartBLADESync:input_type -> blade.SyncJobRequest
	25, // 28: blade.BLADEIngestionService.StopBLADESync:input_type -> google.protobuf.Empty
	25, // 29: blade.BLADEIngestionService.GetSyncStatus:input_type -> google.protobuf.Empty
	11, // 30: blade.BLADEIngestionService.StartBLADEQueryJob:input_type -> blade.BLADEQueryJobRequest
	12, // 31: blade.BLADEIngestionService.GetBLADEQueryJobStatus:input_type -> blade.JobRequest
	25, // 32: blade.BLADEIngestionService.HealthCheck:input_type -> google.protobuf.Empty
	25, // 33: blade.BLADEIngestionService.AddBLADESource:output_type -> google.protobuf.Empty
	3,  // 34: blade.BLADEIngestionService.ListBLADESources:output_type -> blade.DataSourceList
	25, // 35: blade.BLADEIngestionService.RemoveBLADESource:output_type -> google.protobuf.Empty
	5,  // 36: blade.BLADEIngestionService.QueryBLADE:output_type -> blade.BLADEQueryResponse
	6,  // 37: blade.BLADEIngestionService.GetBLADEItem:output_type -> blade.BLADEItem
	9,  // 38: blade.BLADEIngestionService.IngestBLADEItem:output_type -> blade.IngestionResponse
	9,  // 39: blade.BLADEIngestionService.BulkIngestBLADE:output_type -> blade.IngestionResponse
	13, // 40: blade.BLADEIngestionService.StartBLADESync:output_type -> blade.JobResponse
	13, // 41: blade.BLADEIngestionService.StopBLADESync:output_type -> blade.JobResponse
	15, // 42: blade.BLADEIngestionService.GetSyncStatus:output_type -> blade.SyncStatusResponse
	13, // 43: blade.BLADEIngestionService.StartBLADEQueryJob:output_type -> blade.JobResponse
	14, // 44: blade.BLADEIngestionService.GetBLADEQueryJobStatus:output_type -> blade.JobStatusResponse
	16, // 45: blade.BLADEIngestionService.HealthCheck:output_type -> blade.HealthResponse
	33, // [33:46] is the sub-list for method output_type
	20, // [20:33] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_blade_ingestion_proto_init() }
func file_blade_ingestion_proto_init() {
	if File_blade_ingestion_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_blade_ingestion_proto_rawDesc), len(file_blade_ingestion_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blade_ingestion_proto_goTypes,
		DependencyIndexes: file_blade_ingestion_proto_depIdxs,
		EnumInfos:         file_blade_ingestion_proto_enumTypes,
		MessageInfos:      file_blade_ingestion_proto_msgTypes,
	}.Build()
	File_blade_ingestion_proto = out.File
	file_blade_ingestion_proto_goTypes = nil
	file_blade_ingestion_proto_depIdxs = nil
}
